package com.challenge.backendDevTest.controller;

import java.text.ParseException;
import java.util.List;
import java.util.Optional;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.lang.Nullable;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.challenge.backendDevTest.dto.ProductDto;
import com.challenge.backendDevTest.exception.ProductNotFoundException;
import com.challenge.backendDevTest.model.Product;
import com.challenge.backendDevTest.service.ProductService;
import com.challenge.backendDevTest.util.ModelMapperProductUtil;

@RestController
@RequestMapping("api")
public class ProductMockController {
	
	@Autowired
	private ProductService service;
	
	@GetMapping("/getAllProducts")
	public ResponseEntity<?> getProducts() throws ProductNotFoundException{
		List<ProductDto> response = service.getAllProducts();
		return ResponseEntity.ok(response);
	}
	
	@GetMapping("filter")
	public ResponseEntity<?> getProductsByNameAndAvilability(@Nullable @RequestParam String name) throws ParseException{
		List<ProductDto> response = service.getProductsByNameAndAvailability(name);
		return ResponseEntity.ok(response);
	}
	
	@GetMapping("orderByPrice")
	public ResponseEntity<?> getProductsByOrderByPrice() throws ParseException, ProductNotFoundException{
		List<ProductDto> response = service.getProductsByOrderByPrice();
		return ResponseEntity.ok(response);
	}

}
