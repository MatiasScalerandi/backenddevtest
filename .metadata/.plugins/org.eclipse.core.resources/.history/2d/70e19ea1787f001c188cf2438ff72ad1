package com.challenge.backendDevTest.controller;

import static org.mockito.Mockito.when;
import static org.springframework.test.web.client.match.MockRestRequestMatchers.content;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.ArrayList;
import java.util.List;

import org.assertj.core.util.Arrays;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.ResultMatcher;

import com.challenge.backendDevTest.dto.ProductDto;
import com.challenge.backendDevTest.exception.ProductNotFoundException;
import com.challenge.backendDevTest.service.ProductService;
import com.mysql.cj.x.protobuf.MysqlxDatatypes.Array;

@WebMvcTest(ProductController.class)
public class TestController {
	
	@Autowired
    private MockMvc mvc;

    @MockBean
    private ProductService service;
    
    @Test
    void testGetAllProducts() throws Exception {
    	
   
    	List<ProductDto> list = new ArrayList<>();
    	when(service.getAllProducts()).thenReturn(list);
    	
    	mvc.perform(get("/api/getAllProducts").contentType(MediaType.APPLICATION_JSON))
    	
    		.andExpect(status().isOk())
    		.andExpect((ResultMatcher) content().contentType(MediaType.APPLICATION_JSON));
    	
    }

}
